apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: toh-lagom
  region: us-east-1
managedNodeGroups: # Only supported for Kubernetes 1.14 and later. Use 'nodeGroups' otherwise.
  - name: toh-lagom-node-group
    instanceType: t3.medium
    desiredCapacity: 2
    minSize: 2
    maxSize: 3
    labels:
      app: toh-lagom
      actorSystemName: toh-lagom
    ssh:
      allow: true
      #publicKeyPath: ... # will use ~/.ssh/id_rsa.pub as the default ssh key
availabilityZones: # Potentially may have to configure specific ones, depending on your AWS account.
  - us-east-1a
  - us-east-1f
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: toh-lagom
  name: toh-lagom
spec:
  replicas: 2
  selector:
    matchLabels:
      app: toh-lagom
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: toh-lagom
        actorSystemName: toh-lagom
    spec:
      containers:
        - name: toh-lagom
          image: 219289705433.dkr.ecr.us-east-1.amazonaws.com/toh-lagom:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /alive
              port: management
          readinessProbe:
            httpGet:
              path: /ready
              port: management
          ports:
            # akka remoting
            - name: remoting
              containerPort: 2552
              protocol: TCP
            # akka-management bootstrap
            - containerPort: 8558
              protocol: TCP
              # when contact-point-discovery.port-name is set for cluster bootstrap,
              # the management port must be named accordingly:
              # name: management
          env:
            # The Kubernetes API discovery will use this service name
            # to look for nodes with this value in the 'run' label.
            # This can be customized with the 'pod-label-selector' setting.
            - name: AKKA_CLUSTER_BOOTSTRAP_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: "metadata.labels['app']"
