apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: toh-lagom
  name: toh-lagom
spec:
  replicas: 2
  selector:
    matchLabels:
      app: toh-lagom
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: toh-lagom
        actorSystemName: toh-lagom
    spec:
      containers:
        - name: toh-lagom
          image: ${REPOSITORY_URI}:${TOH_VERSION}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /alive
              port: management
          readinessProbe:
            httpGet:
              path: /ready
              port: management
          ports:
            - name: service-gateway
              containerPort: 9000
              protocol: TCP
            - name: service-locator
              containerPort: 9008
              protocol: TCP
            - name: remoting
              containerPort: 2552
              protocol: TCP
            - name: akka-artery
              containerPort: 25520
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          env:
            # Kubernetes API discovery will use this service name
            # to look for nodes with this value in the 'app' label.
            - name: AKKA_CLUSTER_BOOTSTRAP_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: "metadata.labels['app']"
            - name: POSTGRESQL_URL
              value: ${POSTGRESQL_URL}
            - name: POSTGRESQL_USERNAME
              value: ${POSTGRESQL_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${POSTGRESQL_PASSWORD}
            - name: AWS_MCS_USERNAME
              value: ${AWS_MCS_USERNAME}
            - name: AWS_MCS_PASSWORD
              value: ${AWS_MCS_PASSWORD}
